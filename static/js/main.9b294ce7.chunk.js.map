{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/Api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","getMovie","url","fetch","then","response","ok","Error","status","statusText","json","FindMovie","addNewMovie","useState","setMovie","query","setQuery","notFound","setLoadingError","findMovie","a","movieFromServer","Response","Title","Plot","Poster","imdbID","undefined","htmlFor","value","onChange","event","target","type","id","placeholder","classNames","autoComplete","onClick","disabled","App","data","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b294ce7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a\n          href={`https://www.imdb.com/title/${imdbUrl}`}\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbUrl} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=2d32b2ea&t=';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport function getMovie(title) {\n  return request(title);\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/Api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [movie, setMovie] = useState();\n  const [query, setQuery] = useState('');\n  const [notFound, setLoadingError] = useState(false);\n\n  const findMovie = async() => {\n    const movieFromServer = await getMovie(query);\n\n    if (movieFromServer.Response === 'True') {\n      setMovie({\n        title: movieFromServer.Title,\n        description: movieFromServer.Plot,\n        imgUrl: movieFromServer.Poster,\n        imdbUrl: movieFromServer.imdbID,\n      });\n    } else {\n      setMovie(undefined);\n      setLoadingError(true);\n    }\n  };\n\n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    setLoadingError(false);\n  };\n\n  const sendMovie = () => {\n    addNewMovie(movie);\n    setMovie(undefined);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={handleChange}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': notFound })}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={sendMovie}\n              disabled={!movie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addNewMovie = (newMovie) => {\n    const hasAlreadyMovie = movies.find(movie => (\n      movie.imdbUrl === newMovie.imdbUrl\n    ));\n\n    if (!hasAlreadyMovie) {\n      setMovies([...movies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}