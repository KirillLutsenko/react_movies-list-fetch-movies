{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/Api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addNewMovie","useState","setTitle","setMovie","notFound","setNotFound","getMovie","fetch","then","response","json","fetchMovie","movieFromApi","Response","Title","Plot","Poster","imdbID","onSubmit","e","preventDefault","htmlFor","value","onChange","event","target","type","id","placeholder","classNames","autoComplete","onClick","App","data","setMovies","newMovie","some","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wBCJ3BG,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAClBC,mBAAS,IADS,mBACrChB,EADqC,KAC9BiB,EAD8B,OAElBD,mBAAS,MAFS,mBAErCL,EAFqC,KAE9BO,EAF8B,OAGZF,oBAAS,GAHG,mBAGrCG,EAHqC,KAG3BC,EAH2B,KAKtCC,EAAW,YCVO,SAAArB,GAAK,OAAIsB,MAAM,GAAD,OAFvB,0CAEuB,cAAkBtB,IACvDuB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WDUzBC,CAAW1B,GACRuB,MAAK,SAACI,GACyB,UAA1BA,EAAaC,UAMjBR,GAAY,GAEZF,EAAS,CACPlB,MAAO2B,EAAaE,MACpB5B,YAAa0B,EAAaG,KAC1B5B,OAAQyB,EAAaI,OACrB5B,QAAQ,8BAAD,OAAgCwB,EAAaK,QACpDnB,OAAQc,EAAaK,UAZrBZ,GAAY,OAiBpB,OACE,oCACE,0BACEhB,UAAU,aACV6B,SAAU,SAACC,GAGT,OAFAA,EAAEC,iBAEKd,MAGT,yBAAKjB,UAAU,SACb,2BAAOA,UAAU,QAAQgC,QAAQ,eAAjC,eAIA,yBAAKhC,UAAU,WACb,2BACEiC,MAAOrC,EACPsC,SAAU,SAACC,GACTtB,EAASsB,EAAMC,OAAOH,OACtBjB,GAAY,IAEdqB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAWwC,IAAW,QAAS,CAAE,YAAazB,IAC9C0B,aAAa,SAIhB1B,GACC,uBAAGf,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,kBACV0C,QAASzB,GAHX,iBASF,yBAAKjB,UAAU,WACb,4BACEqC,KAAK,SACLrC,UAAU,oBACV0C,QAAS,WACHnC,IACFI,EAAYJ,GACZM,EAAS,IACTC,EAAS,SAPf,sBAiBN,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WAECO,GACC,kBAAC,EAAcA,M,OEjGZoC,EAAM,WAAO,IAAD,EACK/B,mBAASgC,GADd,mBAChBvC,EADgB,KACRwC,EADQ,KAYvB,OACE,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWW,YAfG,SAACmC,GAEjBzC,EAAO0C,MAAK,SAAAxC,GAAK,OAAIA,EAAME,SAAWqC,EAASrC,WAIjDoC,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBF,aCV5CG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b7ac9604.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { fetchMovie } from '../../api/Api';\n\nexport const FindMovie = ({ addNewMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [notFound, setNotFound] = useState(false);\n\n  const getMovie = () => {\n    fetchMovie(title)\n      .then((movieFromApi) => {\n        if (movieFromApi.Response === 'False') {\n          setNotFound(true);\n\n          return;\n        }\n\n        setNotFound(false);\n\n        setMovie({\n          title: movieFromApi.Title,\n          description: movieFromApi.Plot,\n          imgUrl: movieFromApi.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movieFromApi.imdbID}`,\n          imdbId: movieFromApi.imdbID,\n        });\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(e) => {\n          e.preventDefault();\n\n          return getMovie();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setNotFound(false);\n              }}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': notFound })}\n              autoComplete=\"off\"\n            />\n          </div>\n\n          {notFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  addNewMovie(movie);\n                  setTitle('');\n                  setMovie(null);\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addNewMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=5d0c644';\n\nexport const fetchMovie = title => fetch(`${BASE_URL}&t=${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addNewMovie = (newMovie) => {\n    if (\n      movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}